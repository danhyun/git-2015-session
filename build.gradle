buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
    classpath 'com.github.jruby-gradle:jruby-gradle-plugin:0.1.5'
    classpath 'org.ysb33r.gradle:vfs-gradle-plugin:1.0-beta1'
    classpath 'commons-httpclient:commons-httpclient:3.1'
    classpath 'com.bluepapa32:gradle-watch-plugin:0.1.4' // watch files and perform action
  }
}

apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'org.ysb33r.vfs'
apply plugin: 'java'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'idea'

apply plugin: 'com.bluepapa32.watch'

version = '1.0.0-SNAPSHOT'

ext {
  revealjsVersion = 'master'
  asciidoctorBackendVersion = 'master'
  downloadDir = new File(buildDir, 'download')
  templateDir = new File(downloadDir, 'templates')
  revealjsDir = new File(downloadDir, 'reveal.js')
}

repositories {
  jcenter()
}

dependencies {
  gems 'rubygems:slim:2.1.0'
  gems 'rubygems:thread_safe:0.3.4'
}

task download << {
  mkdir downloadDir
  vfs {
    cp "zip:https://github.com/danhyun/asciidoctor-reveal.js/archive/${asciidoctorBackendVersion}.zip!asciidoctor-reveal.js-${asciidoctorBackendVersion}",
      templateDir, recursive: true, overwrite: true
    cp "zip:https://github.com/hakimel/reveal.js/archive/${revealjsVersion}.zip!reveal.js-${revealjsVersion}",
      revealjsDir, recursive: true, overwrite: true
  }
}

download {
  description "Download extra revealjs resources"
  outputs.dir templateDir
  outputs.dir revealjsDir
}

asciidoctor {

  dependsOn jrubyPrepareGems

  sources {
    include 'index.adoc'
  }

  resources {
    from(sourceDir) {
      include 'images/**'
    }
    from(downloadDir) {
      include 'reveal.js/**'
    }
  }

  backends 'revealjs'

  attributes 'sourcedir': project.sourceSets.main.java.srcDirs[0],
    'endpoint-url': 'http://example.org',
    'source-highlighter': 'highlight.js',
    'imagesdir': './images',
    'toc': 'left',
    'icons': 'font',
    'setanchors': 'true',
    'idprefix': '',
    'idseparator': '-',
    'docinfo1': 'true',
    'revealjs_transition': 'linear',
    'revealjs_history': 'true',
    'revealjs_slideNumber': 'true'

  options template_dirs: [new File(templateDir, 'templates/slim').absolutePath]

  dependsOn download
}

idea {
  project {
    jdkName "1.8"
    languageLevel "1.8"
    wildcards.add 'ratpack.groovy'
    ipr {
      withXml { provider ->
        def node = provider.asNode()
        node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
      }
    }
  }
}

watch {
  asciidoc {
    files fileTree(dir: 'src')
    tasks 'asciidoctor'
  }
}

task publish(type: GradleBuild) {
  buildFile = 'publish.gradle'
  tasks = ['publishGhPages']
  System.setProperty('jna.nosys', "true")
}
